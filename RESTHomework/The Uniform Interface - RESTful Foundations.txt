The uniform interface is a core concept of the REST design architecture. The uniform interface is an idea of making design decisions throughout the application to make access to resources, data, and processes easier for the user/developer. It achieves this through 4 design pillars.


Identification of Resources 
* Resources should be identified. This is usually through URIs as that is the standard.
The Manipulation of the Resources
* These resources should be able to logically be manipulated upon using the HTTP standard. I.e. using GET to retrieve information regarding a resource and the data it contains
The Messages Should be Descriptive and Logical
* It should be possible to traverse through the app using the naming conventions that were used throughout the app.
* The user shouldn’t have to have a background knowledge of the structure of the app to use it.
* Ex: if you can access and manipulate fruit in a produce app, vegetables should have similar interface to interact with them
Hypermedia as the Engine of Application State (HATEOAS)
* Hypermedia such as hyperlinks should be used to process state changes. 
* This can help decouple the applications URI structure from the URI structure of client
*